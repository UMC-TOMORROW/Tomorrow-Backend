# application.yml
spring:
  config:
    import: optional:file:./env.properties
  application:
    name: tomorrow
  messages:
    encoding: UTF-8
    basename: validation


  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
    # active: ${SPRING_PROFILES_ACTIVE:dev}

    

  # JPA 설정 
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          lob:
            non_contextual_creation: true

  # JWT 시크릿 키 설정 추가
  jwt:
    secret: vmfhaltmskdlstkfkdgodyroqkfwkdbalroqkfwkdbalaaaaaaaaaaaaaaaabbbbb

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            scope: name, email, gender, mobile

          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            scope: profile, email

          
          kakao:
            client-name: kakao
            client-id: ${KAKAO_CLIENT_ID}
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            scope: profile_nickname, profile_image


        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# 로깅 설정(기본값)
logging:
  level:
    com.umc.tomorrow: INFO
    root: INFO
    # org.springframework.security: DEBUG #  logging을 위해
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Swagger 설정 (공통)
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    display-request-duration: true
    try-it-out-enabled: true
  api-docs:
    path: /v3/api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# 액추에이터 기본 설정
management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: never
  metrics:
    enable:
      processors: false
server:
  port: 8080
  servlet:
    context-path: /
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  # 프록시 헤더 전략
  forward-headers-strategy: native
  error:
    include-stacktrace: never
    include-message: always

cloud:
  aws:
    s3:
      bucket: umc8-tomorrow-bucket
    region:
      static: ap-northeast-2
    stack:
      auto: false
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID}
      secretKey: ${AWS_SECRET_ACCESS_KEY}

